{"version":3,"sources":["components/js/NavBar.js","components/js/MainPage.js","components/js/WhyWhatschart.js","components/js/HowtoPage.js","components/js/WhatsChart.js","util/util.js","core/author.js","core/statscalculator.js","components/js/ProgressIndicator.js","components/js/DownloadAndSeeChart.js","components/js/FileForm.js","components/js/FeedbackPage.js","components/js/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","props","className","id","href","MainPage","WhyWhatschart","icon","faUserSecret","fixedWidth","faOsi","faFastForward","HowtoPage","WhatsChart","days","defaultVerticalBarChartOpts","defaultHorizontalBarChartOpts","defaultPieChartOpts","dataInDepthSummaryAll","dataInDepthSummaryMedia","dataWordsPerMessage","dataMostUsedWords","dataMostUsedEmojis","optsMostUsedEmojis","dataMessagesByHour","dataMessagesByDayOfWeek","dataMessagesByDate","getWeekDayName","bind","defaults","animation","duration","font","family","weight","percentage","color","i","parseInt","r","Math","round","split","a","b","d","t","P","slice","day","this","author1","author2","combined","config","textColor","document","body","clientWidth","size","title","maintainAspectRatio","scales","x","grid","display","drawOnChartArea","drawTicks","drawBorder","y","plugins","legend","position","text","indexAxis","labels","name","datasets","label","data","totalMessages","backgroundColor","shadeColor","author1Color","author2Color","borderColor","textMessages","totalMedia","pictures","videos","audios","links","wordsPerMessage","borderWidth","authorNum","author","Array","from","words","keys","values","dataTotalEmojis","totalEmojis","emojis","ticks","messagesByHour","graphColor","messagesByDaysOfWeek","map","val","messagesByDate","getElementById","style","setProperty","iconColor","author1Name","author2Name","periodInDays","faCommentDots","faIcons","faImages","faFilm","faMicrophoneAlt","faLink","toPrecision","height","width","options","sectionWordsString","mostUsedWord","mostUsedEmoji","busiestHour","busiestWeekOfDay","busiestDay","React","Component","defaultProps","sortMap","Map","entries","sort","supportedLangs","sw","af","ar","bg","bn","br","ca","cs","da","de","el","en","eo","es","et","eu","fa","fr","fi","ga","gl","ha","he","hi","hr","hu","hy","it","ja","ko","la","lgg","lggo","lv","mr","my","nl","no","pa","pl","pt","ptbr","ro","ru","sk","sl","so","st","sv","th","tr","vi","yo","zh","zu","totalWords","statsCalculator","removeStopwords","language","authors","sectionsWordString","startDate","endDate","messages","regexEmojis","RegExp","regexWords","set","key","freq","get","undefined","map1","map2","newMap","prevVal","wordsSectionString","msg","generateWordsSectionString","addMaps","reduce","e","auth","Promise","resolve","reject","setAuthorNames","incrementCounter","date","getHours","getDay","toLocaleDateString","message","toLowerCase","includes","match","word","length","emoji","generateFinalStats","generateCombinedStats","whatsapp","then","generateStats","err","console","error","Error","rmStopwords","lang","parseChats","ProgressIndicator","isError","progress","DownloadAndSeeChart","type","onClick","handleDownload","FileForm","state","defaultForm","colors","langExtensions","generate","readFile","handleFormSubmission","toggleLangDropdown","convertToRGB","updateProgress","run","stats","submitCallback","catch","file","reader","FileReader","onload","event","target","result","onerror","readAsText","showChart","preventDefault","files","value","endsWith","checked","toPng","dataURL","download","disabled","hex","v","join","setState","prevState","action","onSubmit","htmlFor","accept","onChange","defaultChecked","defaultValue","idx","chartVisible","FeedbackPage","rel","Footer","App","formSubmitCallback","show","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.06ec5baa.chunk.js","sourcesContent":["import React from \"react\";\n\nimport \"../css/NavBar.css\";\n\nconst NavBar = (props) => (\n  <nav className=\"navBar\">\n    <h1 id=\"navHeading\">WhatsChart</h1>\n    <ul>\n      <li>\n        <a href=\"#fileForm\">Generate</a>\n      </li>\n      <li>\n        <a href=\"#howtoPage\">How to?</a>\n      </li>\n      <li>\n        <a href=\"#whyWhatschart\">Why WhatsChart?</a>\n      </li>\n      <li>\n        <a href=\"/demo.png\">Demo</a>\n      </li>\n      <li>\n        <a href=\"#feedbackPage\">Feedback</a>\n      </li>\n      <li>\n        <a href=\"https://github.com/bhumitattarde/WhatsChart\">GitHub</a>\n      </li>\n    </ul>\n  </nav>\n);\n\nexport default NavBar;\n","import React from \"react\";\n\nimport \"../css/MainPage.css\";\n\nconst MainPage = (props) => (\n  <header id=\"mainPage\" className=\"page\">\n    <h1>Instantly analyze and visualize your WhatsApp chats for free!</h1>\n\n    <ul className=\"linksList\">\n      <li className=\"button\">\n        <a href=\"#whyWhatschart\">Why WhatsChart?</a>\n      </li>\n      <li className=\"button\">\n        <a href=\"/demo.png\">See a sample visualization</a>\n      </li>\n      <li className=\"button\">\n        <a href=\"#fileForm\">Generate a visualization!</a>\n      </li>\n    </ul>\n  </header>\n);\n\nexport default MainPage;\n","import React from \"react\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faUserSecret, faFastForward } from \"@fortawesome/free-solid-svg-icons\";\nimport { faOsi } from \"@fortawesome/free-brands-svg-icons\";\n\nimport \"../css/WhyWhatschart.css\";\n\nconst WhyWhatschart = (props) => (\n  <div id=\"whyWhatschart\" className=\"page\">\n    <h2>Why WhatsChart?</h2>\n\n    <ul id=\"whyWhatschartList\">\n      <li className=\"whyWhatschartBox\">\n        <div>\n          <FontAwesomeIcon icon={faUserSecret} fixedWidth />\n        </div>\n        <section>\n          <h3>Maximum privacy</h3>\n          <p>\n            WhatsChart works locally, which means NO data, including the chat\n            you select, is ever sent to ANY server! WhatsChart does NOT collect\n            any analytics or other data either.\n          </p>\n        </section>\n      </li>\n      <li className=\"whyWhatschartBox\">\n        <div>\n          <FontAwesomeIcon icon={faOsi} fixedWidth />\n        </div>\n        <section>\n          <h3>Completely open-source and free</h3>\n          <p>\n            WhatsChart does not charge you anything! Anyone, including you, can\n            read the source code anytime!\n          </p>\n        </section>\n      </li>\n      <li className=\"whyWhatschartBox\">\n        <div>\n          <FontAwesomeIcon icon={faFastForward} fixedWidth />\n        </div>\n        <section>\n          <h3>Instant and customizable</h3>\n          <p>\n            WhatsChart works instantly! One click and off you go! Additionally,\n            WhatsChart is highly customizable and new customization options are\n            still being added.\n          </p>\n        </section>\n      </li>\n    </ul>\n\n    <ul className=\"linksList\">\n      <li className=\"button altColorButton\">\n        <a href=\"#fileForm\">Try it out!</a>\n      </li>\n      <li className=\"button altColorButton\">\n        <a href=\"/demo.png\">Demo</a>\n      </li>\n    </ul>\n  </div>\n);\n\nexport default WhyWhatschart;\n","import React from \"react\";\n\nimport \"../css/HowtoPage.css\";\n\nconst HowtoPage = (props) => (\n  <div id=\"howtoPage\" className=\"page\">\n    <h2>How to use WhatsChart?</h2>\n    <ol className=\"paraWrapper\">\n      <li>\n        <div>\n          <h3>Export your WhatsApp chats</h3>\n          <ol className=\"howtoSubListWrapper\">\n            <li>Open the chat.</li>\n            <li>\n              Tap More options &gt; More &gt; Export chat for Android. For\n              iPhone Tap the contact's name or group subject &gt; Export Chat.{\" \"}\n            </li>\n            <li>\n              Choose to export with media. If you decide to leave media out, you\n              won't get statistics about media like pictures, videos etc.\n            </li>\n            <li>\n              File with name like <code>chat.txt</code> or{\" \"}\n              <code>WhatsApp chat with John.txt</code> is the file you'll need.\n              WhatsApp unfortunately doesn't follow a consistent pattern while\n              naming the chat file. If a <code>.zip</code> file was exported,\n              unzip it to find the <code>.txt</code> chat file. Feel free to\n              discard the exported media.\n            </li>\n            <li>\n              If you're still having trouble exporting your chats, refer to the\n              following links from WhatsApp FAQ:\n              <ul className=\"howtoSubListWrapper\">\n                <li>\n                  <a href=\"https://faq.whatsapp.com/android/chats/how-to-save-your-chat-history/?lang=en\">\n                    Android\n                  </a>\n                </li>\n                <li>\n                  <a href=\"https://faq.whatsapp.com/iphone/chats/how-to-back-up-to-icloud/?lang=en\">\n                    iPhone\n                  </a>\n                </li>\n              </ul>\n            </li>\n          </ol>\n        </div>\n      </li>\n      <li>\n        <div>\n          <h3>\n            Go to <a href=\"#fileForm\">generate page</a>, select the exported\n            chat file, configuration and click on Generate.\n          </h3>\n          <p className=\"howtoSubListWrapper\">\n            You can then see/download the generated visualization. It is HIGHLY\n            recommended that you use desktop or a device with wide screen to\n            download the visualization. Please note that downloading is\n            currently not supprted on Safari browser, please use Firefox or\n            Chrome.\n          </p>\n        </div>\n      </li>\n    </ol>\n  </div>\n);\n\nexport default HowtoPage;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { Bar, Pie, Doughnut } from \"react-chartjs-2\";\nimport { defaults } from \"react-chartjs-2\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faIcons,\n  faImages,\n  faFilm,\n  faMicrophoneAlt,\n  faLink,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { faCommentDots } from \"@fortawesome/free-regular-svg-icons\";\n\nimport \"../css/WhatsChart.css\";\n\nclass WhatsChart extends React.Component {\n  constructor(props) {\n    super(props);\n\n    // member variables\n    this.days = [\n      \"Sunday\",\n      \"Monday\",\n      \"Tuesday\",\n      \"Wednesday\",\n      \"Thursday\",\n      \"Friday\",\n      \"Saturday\",\n    ];\n\n    // Graph configs\n    // graph options. If some graph needs customized options, set them separately\n    this.defaultVerticalBarChartOpts = () => {};\n    this.defaultHorizontalBarChartOpts = () => {};\n    this.defaultPieChartOpts = () => {};\n\n    // data and individual options\n    this.dataInDepthSummaryAll = {};\n    this.dataInDepthSummaryMedia = {};\n    this.dataWordsPerMessage = {};\n    this.dataMostUsedWords = () => {};\n    this.dataMostUsedEmojis = () => {};\n    this.optsMostUsedEmojis = {};\n    this.dataMessagesByHour = {};\n    this.dataMessagesByDayOfWeek = {};\n    this.dataMessagesByDate = {};\n\n    // `this` bindings\n    this.getWeekDayName = this.getWeekDayName.bind(this);\n\n    //chartjs global config\n    defaults.animation.duration = 0;\n    defaults.font.family = \"'Poppins', 'sans-serif'\";\n\n    defaults.font.weight = \"400\";\n  }\n\n  // methods\n  shadeColor(percentage, color) {\n    // `percentage` range is -1 to 1 & color is in rgb format eg., (\"0.1\", \"rgb(0,0,255)\")\n    var i = parseInt,\n      r = Math.round,\n      [a, b, color, d] = color.split(\",\"),\n      P = percentage < 0,\n      t = P ? 0 : 255 * percentage,\n      P = P ? 1 + percentage : 1 - percentage;\n    return (\n      \"rgb\" +\n      (d ? \"a(\" : \"(\") +\n      r(i(a[3] === \"a\" ? a.slice(5) : a.slice(4)) * P + t) +\n      \",\" +\n      r(i(b) * P + t) +\n      \",\" +\n      r(i(color) * P + t) +\n      (d ? \",\" + d : \")\")\n    );\n  }\n\n  getWeekDayName(day) {\n    return this.days[day];\n  }\n\n  // hooks\n  componentWillMount() {\n    const author1 = this.props.author1;\n    const author2 = this.props.author2;\n    const combined = this.props.combined;\n    const config = this.props.config;\n\n    defaults.color = config.textColor;\n    if (document.body.clientWidth < 480) {\n      defaults.font.size = 10;\n    } else {\n      defaults.font.size = 12;\n    }\n\n    // Graph configs\n    // graph options. If some graph needs customized options, set them separately\n\n    this.defaultVerticalBarChartOpts = (title = \"\") => {\n      return {\n        maintainAspectRatio: false,\n        scales: {\n          x: {\n            grid: {\n              display: false,\n              drawOnChartArea: false,\n              drawTicks: false,\n              drawBorder: false,\n            },\n          },\n          y: {\n            grid: {\n              display: false,\n              drawOnChartArea: false,\n              drawTicks: false,\n              drawBorder: false,\n            },\n          },\n        },\n        plugins: {\n          legend: {\n            display: false,\n          },\n          title: {\n            display: true,\n            position: \"bottom\",\n            text: title,\n          },\n        },\n      };\n    };\n\n    this.defaultHorizontalBarChartOpts = (title = \"\") => {\n      return {\n        maintainAspectRatio: false,\n        indexAxis: \"y\",\n        scales: {\n          x: {\n            grid: {\n              display: false,\n              drawOnChartArea: false,\n              drawTicks: false,\n              drawBorder: false,\n            },\n          },\n          y: {\n            grid: {\n              display: false,\n              drawOnChartArea: false,\n              drawTicks: false,\n              drawBorder: false,\n            },\n          },\n        },\n        plugins: {\n          legend: {\n            display: false,\n          },\n          title: {\n            display: true,\n            position: \"bottom\",\n            text: title,\n          },\n        },\n      };\n    };\n\n    this.defaultPieChartOpts = (title = \"\") => {\n      return {\n        scales: {\n          x: {\n            display: false,\n          },\n          y: {\n            display: false,\n          },\n        },\n        plugins: {\n          title: {\n            display: true,\n            position: \"bottom\",\n            text: title,\n          },\n        },\n      };\n    };\n\n    // data and individual options\n    this.dataInDepthSummaryAll = {\n      labels: [author1.name, author2.name],\n      datasets: [\n        {\n          label: \"Total messages\",\n          labels: [author1.name, author2.name],\n          data: [author1.totalMessages, author2.totalMessages],\n          backgroundColor: [\n            this.shadeColor(\"0\", config.author1Color),\n            this.shadeColor(\"0\", config.author2Color),\n          ],\n          // \"borderWidth\": 2,\n          borderColor: config.backgroundColor,\n        },\n        {\n          label: \"Text messages\",\n          labels: [author1.name, author2.name],\n          data: [author1.textMessages, author2.textMessages],\n          backgroundColor: [\n            this.shadeColor(\"0.3\", config.author1Color),\n            this.shadeColor(\"0.3\", config.author2Color),\n          ],\n          // \"borderWidth\": 2,\n          borderColor: config.backgroundColor,\n        },\n        {\n          label: \"Media\",\n          labels: [author1.name, author2.name],\n          data: [author1.totalMedia, author2.totalMedia],\n          backgroundColor: [\n            this.shadeColor(\"0.6\", config.author1Color),\n            this.shadeColor(\"0.6\", config.author2Color),\n          ],\n          borderColor: config.backgroundColor,\n          // \"borderWidth\": 2,\n        },\n      ],\n    };\n\n    this.dataInDepthSummaryMedia = {\n      labels: [author1.name, author2.name],\n      datasets: [\n        {\n          label: \"Pictures\",\n          data: [author1.pictures, author2.pictures],\n          backgroundColor: [\n            this.shadeColor(\"0\", config.author1Color),\n            this.shadeColor(\"0\", config.author2Color),\n          ],\n          // borderWidth: 0,\n          borderColor: config.backgroundColor,\n        },\n        {\n          label: \"Videos\",\n          data: [author1.videos, author2.videos],\n          backgroundColor: [\n            this.shadeColor(\"0.2\", config.author1Color),\n            this.shadeColor(\"0.2\", config.author2Color),\n          ],\n          // borderWidth: 0,\n          borderColor: config.backgroundColor,\n        },\n        {\n          label: \"Audios\",\n          data: [author1.audios, author2.audios],\n          backgroundColor: [\n            this.shadeColor(\"0.4\", config.author1Color),\n            this.shadeColor(\"0.4\", config.author2Color),\n          ],\n          // borderWidth: 0,\n          borderColor: config.backgroundColor,\n        },\n        {\n          label: \"Links\",\n          data: [author1.links, author2.links],\n          backgroundColor: [\n            this.shadeColor(\"0.6\", config.author1Color),\n            this.shadeColor(\"0.6\", config.author2Color),\n          ],\n          // borderWidth: 0,\n          borderColor: config.backgroundColor,\n        },\n      ],\n    };\n\n    this.dataWordsPerMessage = {\n      labels: [author1.name, author2.name],\n      datasets: [\n        {\n          data: [author1.wordsPerMessage, author2.wordsPerMessage],\n          backgroundColor: [config.author1Color, config.author2Color],\n          borderWidth: 0,\n        },\n      ],\n    };\n\n    this.dataMostUsedWords = (authorNum) => {\n      //authorNum is number (either 1 or 2)\n      const author = authorNum === 1 ? author1 : author2;\n\n      return {\n        labels: Array.from(author.words.keys()).slice(0, 11),\n        datasets: [\n          {\n            label: author.name,\n            data: Array.from(author.words.values()).slice(0, 11),\n            borderWidth: 0,\n            backgroundColor:\n              authorNum === 1 ? config.author1Color : config.author2Color,\n          },\n        ],\n      };\n    };\n\n    this.dataTotalEmojis = {\n      labels: [author1.name, author2.name],\n      datasets: [\n        {\n          data: [author1.totalEmojis, author2.totalEmojis],\n          backgroundColor: [config.author1Color, config.author2Color],\n          borderWidth: 0,\n        },\n      ],\n    };\n\n    this.dataMostUsedEmojis = (authorNum) => {\n      //authorNum is number (either 1 or 2)\n      const author = authorNum === 1 ? author1 : author2;\n\n      return {\n        labels: Array.from(author.emojis.keys()).slice(0, 6),\n        datasets: [\n          {\n            label: author.name,\n            data: Array.from(author.emojis.values()).slice(0, 6),\n            borderWidth: 0,\n            backgroundColor:\n              authorNum === 1 ? config.author1Color : config.author2Color,\n          },\n        ],\n      };\n    };\n\n    this.optsMostUsedEmojis = {\n      maintainAspectRatio: false,\n      indexAxis: \"y\",\n      scales: {\n        x: {\n          grid: {\n            display: false,\n            drawOnChartArea: false,\n            drawTicks: false,\n            drawBorder: false,\n          },\n        },\n        y: {\n          grid: {\n            display: false,\n            drawOnChartArea: false,\n            drawTicks: false,\n            drawBorder: false,\n          },\n          ticks: {\n            font: {\n              size: 20,\n            },\n          },\n        },\n      },\n      plugins: {\n        legend: {\n          display: false,\n        },\n        title: {\n          display: true,\n          position: \"bottom\",\n          text: \"\",\n        },\n      },\n    };\n\n    this.dataMessagesByHour = {\n      labels: [...combined.messagesByHour.keys()],\n      datasets: [\n        {\n          label: \"Messages\",\n          data: [...combined.messagesByHour.values()],\n          borderWidth: 0,\n          backgroundColor: config.graphColor,\n        },\n      ],\n    };\n\n    this.dataMessagesByDayOfWeek = {\n      labels: [...combined.messagesByDaysOfWeek.keys()].map((val) =>\n        this.getWeekDayName(val)\n      ),\n      datasets: [\n        // {\n        //   type: \"line\",\n        //   label: author1.name,\n        //   data: [...author1.messagesByDaysOfWeek.values()],\n        //   borderWidth: 1.5,\n        //   pointRadius: 0,\n        //   borderColor: config.author1Color,\n        // },\n        // {\n        //   type: \"line\",\n        //   label: author2.name,\n        //   data: [...author2.messagesByDaysOfWeek.values()],\n        //   borderWidth: 1.5,\n        //   pointRadius: 0,\n        //   borderColor: config.author2Color,\n        // },\n        {\n          label: \"Messages\",\n          data: [...combined.messagesByDaysOfWeek.values()],\n          borderWidth: 0,\n          backgroundColor: config.graphColor,\n        },\n      ],\n    };\n\n    this.dataMessagesByDate = {\n      labels: [...combined.messagesByDate.keys()],\n      datasets: [\n        // {\n        //   type: \"line\",\n        //   label: author1.name,\n        //   data: [...author1.messagesByDate.values()],\n        //   borderWidth: 1,\n        //   pointRadius: 0,\n        //   borderColor: config.author1Color,\n        // },\n        // {\n        //   type: \"line\",\n        //   label: author2.name,\n        //   data: [...author2.messagesByDate.values()],\n        //   borderWidth: 1,\n        //   pointRadius: 0,\n        //   borderColor: config.author2Color,\n        // },\n        {\n          label: \"Messages\",\n          data: [...combined.messagesByDate.values()],\n          borderWidth: 0,\n          backgroundColor: config.graphColor,\n        },\n      ],\n    };\n  }\n\n  componentDidMount() {\n    const config = this.props.config;\n\n    document\n      .getElementById(\"chart\")\n      .style.setProperty(\"--backgroundColor\", config.backgroundColor);\n    document\n      .getElementById(\"chart\")\n      .style.setProperty(\"--textColor\", config.textColor);\n    document\n      .getElementById(\"chart\")\n      .style.setProperty(\"--iconColor\", config.iconColor);\n  }\n\n  render() {\n    // frequently used vars\n    const author1 = this.props.author1;\n    const author2 = this.props.author2;\n    const combined = this.props.combined;\n    const author1Name = this.props.author1.name;\n    const author2Name = this.props.author2.name;\n\n    return (\n      <div id=\"chart\" className=\"page\">\n        <p id=\"madeWithTag\">Made using whatschart.bhumit.net</p>\n        <header>\n          <h1>{combined.periodInDays} days of WhatsApp texting</h1>\n          {/* <h2>\n            between {author1Name} &amp; {author2Name}\n          </h2> */}\n        </header>\n\n        {/* summary section */}\n        <section className=\"chartSection\">\n          <h3 className=\"sectionHeading\">\n            {author1Name} &amp; {author2Name} exchanged\n          </h3>\n\n          <section id=\"summaries\">\n            <div className=\"summaryBox\">\n              <div className=\"iconWrapper\">\n                <FontAwesomeIcon icon={faCommentDots} fixedWidth />\n              </div>\n              <p>{author1.textMessages + author2.textMessages}</p>\n              <p>text messages</p>\n            </div>\n\n            <div className=\"summaryBox\">\n              <div className=\"iconWrapper\">\n                <FontAwesomeIcon icon={faIcons} fixedWidth />\n              </div>\n              <p>{author1.totalEmojis + author2.totalEmojis}</p>\n              <p>emojis</p>\n            </div>\n\n            <div className=\"summaryBox\">\n              <div className=\"iconWrapper\">\n                <FontAwesomeIcon icon={faImages} fixedWidth />\n              </div>\n              <p>{author1.pictures + author2.pictures}</p>\n              <p>pictures</p>\n            </div>\n\n            <div className=\"summaryBox\">\n              <div className=\"iconWrapper\">\n                <FontAwesomeIcon icon={faFilm} fixedWidth />\n              </div>\n              <p>{author1.videos + author2.videos}</p>\n              <p>videos</p>\n            </div>\n\n            <div className=\"summaryBox\">\n              <div className=\"iconWrapper\">\n                <FontAwesomeIcon icon={faMicrophoneAlt} fixedWidth />\n              </div>\n              <p>{author1.audios + author2.audios}</p>\n              <p>audios</p>\n            </div>\n\n            <div className=\"summaryBox\">\n              <div className=\"iconWrapper\">\n                <FontAwesomeIcon icon={faLink} fixedWidth />\n              </div>\n              <p>{author1.links + author2.links}</p>\n              <p>links</p>\n            </div>\n          </section>\n\n          <h4 className=\"sectionDescription\">\n            which amounts to {author1.totalMessages + author2.totalMessages}{\" \"}\n            messages in total!\n          </h4>\n        </section>\n\n        {/* in depth summary section */}\n        <section className=\"chartSection\">\n          <h3 className=\"sectionHeading\">\n            Of which, {author1.totalMessages} or{\" \"}\n            {(\n              (author1.totalMessages /\n                (author1.totalMessages + author2.totalMessages)) *\n              100\n            ).toPrecision(4)}\n            % were sent by {author1Name} &amp; {author2.totalMessages} or{\" \"}\n            {(\n              (author2.totalMessages /\n                (author1.totalMessages + author2.totalMessages)) *\n              100\n            ).toPrecision(4)}\n            % by {author2Name}.\n          </h3>\n          <div id=\"chartInDepthSummary\" className=\"chartsHorizontal\">\n            <div>\n              <Pie\n                id=\"chartInDepthSummaryAll\"\n                data={this.dataInDepthSummaryAll}\n                height={300}\n                width={300}\n                options={this.defaultPieChartOpts([\n                  \"Total messages (outer circle), texts\",\n                  \"(middle circle) & media (inner circle)\",\n                ])}\n              />\n            </div>\n            <div>\n              <Bar\n                id=\"chartInDepthSummaryMedia\"\n                data={this.dataInDepthSummaryMedia}\n                height={300}\n                width={300}\n                options={this.defaultVerticalBarChartOpts([\n                  \"Distribution of media\",\n                  \"(Pictures - Videos - Audios - Links)\",\n                ])}\n              />\n            </div>\n          </div>\n        </section>\n\n        {/* words section */}\n        <section className=\"chartSection\">\n          <h3 className=\"sectionHeading\">{combined.sectionWordsString}</h3>\n          <div>\n            <Bar\n              id=\"chartWordsPerMessage\"\n              data={this.dataWordsPerMessage}\n              height={120}\n              options={this.defaultHorizontalBarChartOpts(\"Words per message\")}\n            />\n          </div>\n          <h4 className=\"sectionDescription\">\n            '{combined.mostUsedWord[0]}' was the most used word, making\n            appearance {combined.mostUsedWord[1]} times!\n          </h4>\n          <h3 className=\"sectionHeadingII\">\n            {author1Name}'s favourite word was '{author1.mostUsedWord[0]}',\n            while that of {author2Name} was '{author2.mostUsedWord[0]}'.\n          </h3>\n          <div className=\"chartsHorizontal\">\n            <div className=\"dividedHorizontalBarWrapper\">\n              <Bar\n                id=\"chartMostUsedWordsAuthor1\"\n                data={this.dataMostUsedWords(1)}\n                options={this.defaultHorizontalBarChartOpts()}\n              />\n            </div>\n            <div className=\"dividedHorizontalBarWrapper\">\n              <Bar\n                id=\"chartMostUsedWordsAuthor2\"\n                data={this.dataMostUsedWords(2)}\n                options={this.defaultHorizontalBarChartOpts()}\n              />\n            </div>\n          </div>\n        </section>\n\n        {/* emojis section */}\n        {author1.totalEmojis + author2.totalEmojis > 0 ? (\n          <section className=\"chartSection\" id=\"sectionEmojis\">\n            <h3 className=\"sectionHeading\">\n              But words isn't the only way of expressing themselves for{\" \"}\n              {author1Name} &amp; {author2Name}!\n            </h3>\n            <h4 className=\"sectionDescription\">\n              {author1Name} &amp; {author2Name} sent a total of{\" \"}\n              {author1.totalEmojis + author2.totalEmojis} emojis with{\" \"}\n              {author1Name} sending {author1.totalEmojis} &amp; {author2Name}{\" \"}\n              sending {author2.totalEmojis}.\n            </h4>\n            <div>\n              <Doughnut\n                id=\"chartTotalEmojis\"\n                data={this.dataTotalEmojis}\n                height={300}\n                width={300}\n                options={this.defaultPieChartOpts(\"Emojis sent\")}\n              />\n            </div>\n            <h4 className=\"sectionDescription\">\n              '{combined.mostUsedEmoji[0]}' was overall the most used emoji\n              appearing {combined.mostUsedEmoji[1]} times!\n            </h4>\n            <h3 className=\"sectionHeadingII\">\n              {author1Name}'s favourite emoji was '{author1.mostUsedEmoji[0]}'\n              while that of {author2Name} was '{author2.mostUsedEmoji[0]}'\n            </h3>\n            <div className=\"chartsHorizontal\">\n              <div className=\"dividedHorizontalBarWrapper\">\n                <Bar\n                  id=\"chartMostUsedEmojisAuthor1\"\n                  data={this.dataMostUsedEmojis(1)}\n                  // height={300}\n                  // width={300}\n                  options={this.optsMostUsedEmojis}\n                />\n              </div>\n              <div className=\"dividedHorizontalBarWrapper\">\n                <Bar\n                  id=\"chartMostUsedEmojisAuthor2\"\n                  data={this.dataMostUsedEmojis(2)}\n                  // height={300}\n                  // width={300}\n                  options={this.optsMostUsedEmojis}\n                />\n              </div>\n            </div>\n          </section>\n        ) : null}\n\n        {/* Timing section */}\n        <section className=\"chartSection\" id=\"sectionTiming\">\n          <h3 className=\"sectionHeading\">\n            When do {author1Name} &amp; {author2Name} chat?\n          </h3>\n          <h4 className=\"sectionDescription\">\n            {combined.busiestHour[0]}:00 is the busiest hour with about{\" \"}\n            {combined.busiestHour[1]} messages.\n          </h4>\n          <div className=\"verticalBarWrapper\">\n            <Bar\n              id=\"chartMessagesByHour\"\n              data={this.dataMessagesByHour}\n              options={this.defaultVerticalBarChartOpts(\n                \"Messages by hour of the day\"\n              )}\n            />\n          </div>\n\n          <h4 className=\"sectionDescription\">\n            {author1Name} &amp; {author2Name} send about{\" \"}\n            {(\n              (author1.totalMessages + author2.totalMessages) /\n              combined.periodInDays\n            ).toPrecision(4)}{\" \"}\n            messages every day &amp;{\" \"}\n            {this.getWeekDayName(combined.busiestWeekOfDay[0])}s are the\n            busiest!\n          </h4>\n          <div className=\"verticalBarWrapper\">\n            <Bar\n              id=\"chartMessagesByDayOfWeek\"\n              data={this.dataMessagesByDayOfWeek}\n              options={this.defaultVerticalBarChartOpts(\n                \"Messages by day of the week\"\n              )}\n            />\n          </div>\n\n          {/* prettier-ignore */}\n          <h4 className=\"sectionDescription\">\n            {combined.busiestDay[0]} was the busiest day with{\" \"}\n            {combined.busiestDay[1]} messages! That's about{\" \"}\n            {(combined.busiestDay[1] / 24).toPrecision(4)} messages every hour.\n          </h4>\n          <div className=\"verticalBarWrapper\">\n            <Bar\n              id=\"chartMessagesByDate\"\n              data={this.dataMessagesByDate}\n              options={this.defaultVerticalBarChartOpts(\"Messages by date\")}\n            />\n          </div>\n        </section>\n      </div>\n    );\n  }\n}\n\nWhatsChart.propTypes = {\n  author1: PropTypes.object.isRequired,\n  author2: PropTypes.object.isRequired,\n  combined: PropTypes.object.isRequired,\n  config: PropTypes.object.isRequired,\n};\n\nWhatsChart.defaultProps = {\n  author1: {},\n  author2: {},\n  combined: {},\n  config: {},\n};\n\nexport default WhatsChart;\n","import sw from \"stopword\";\n\n// Util functions that are required in more than one class/file go here\n\nexport function sortMap(map) {\n  // sorts the map in descending order of values\n  return new Map([...map.entries()].sort((a, b) => b[1] - a[1]));\n}\n\nexport const supportedLangs = new Map([\n  [\"af\", sw.af],\n  [\"ar\", sw.ar],\n  [\"bg\", sw.bg],\n  [\"bn\", sw.bn],\n  [\"br\", sw.br],\n  [\"ca\", sw.ca],\n  [\"cs\", sw.cs],\n  [\"da\", sw.da],\n  [\"de\", sw.de],\n  [\"el\", sw.el],\n  [\"en\", sw.en],\n  [\"eo\", sw.eo],\n  [\"es\", sw.es],\n  [\"et\", sw.et],\n  [\"eu\", sw.eu],\n  [\"fa\", sw.fa],\n  [\"fr\", sw.fr],\n  [\"fi\", sw.fi],\n  [\"ga\", sw.ga],\n  [\"gl\", sw.gl],\n  [\"ha\", sw.ha],\n  [\"he\", sw.he],\n  [\"hi\", sw.hi],\n  [\"hr\", sw.hr],\n  [\"hu\", sw.hu],\n  [\"hy\", sw.hy],\n  [\"id\", sw.id],\n  [\"it\", sw.it],\n  [\"ja\", sw.ja],\n  [\"ko\", sw.ko],\n  [\"la\", sw.la],\n  [\"lgg\", sw.lgg],\n  [\"lggo\", sw.lggo],\n  [\"lv\", sw.lv],\n  [\"mr\", sw.mr],\n  [\"my\", sw.my],\n  [\"nl\", sw.nl],\n  [\"no\", sw.no],\n  [\"pa\", sw.pa],\n  [\"pl\", sw.pl],\n  [\"pt\", sw.pt],\n  [\"ptbr\", sw.ptbr],\n  [\"ro\", sw.ro],\n  [\"ru\", sw.ru],\n  [\"sk\", sw.sk],\n  [\"sl\", sw.sl],\n  [\"so\", sw.so],\n  [\"st\", sw.st],\n  [\"sv\", sw.sv],\n  [\"sw\", sw.sw],\n  [\"th\", sw.th],\n  [\"tr\", sw.tr],\n  [\"vi\", sw.vi],\n  [\"yo\", sw.yo],\n  [\"zh\", sw.zh],\n  [\"zu\", sw.zu],\n]);\n","export class author {\n  constructor() {\n    this.name = \"\";\n    this.totalMessages = 0;\n    this.textMessages = 0;\n    this.totalWords = 0;\n    this.totalEmojis = 0;\n    this.totalMedia = 0;\n    this.pictures = 0;\n    this.videos = 0;\n    this.audios = 0;\n    this.links = 0;\n\n    this.words = new Map();\n    this.emojis = new Map();\n\n    this.messagesByHour = new Map();\n    this.messagesByDaysOfWeek = new Map();\n    this.messagesByDate = new Map();\n\n    this.wordsPerMessage = 0;\n    this.mostUsedWord = \"\";\n    this.mostUsedEmoji = \"\";\n  }\n}\n","import * as whatsapp from \"whatsapp-chat-parser\";\nimport sw from \"stopword\";\nimport { sortMap } from \"../util/util.js\";\nimport { author } from \"./author.js\";\n\nclass statsCalculator {\n  constructor() {\n    // member vars\n    this.removeStopwords = false;\n    this.language = {};\n    this.authors = {\n      author1: new author(),\n      author2: new author(),\n      combined: {\n        sectionsWordString: \"\",\n\n        messagesByHour: new Map(),\n        messagesByDaysOfWeek: new Map(),\n        messagesByDate: new Map(),\n        mostUsedWord: {},\n        mostUsedEmoji: {},\n        busiestHour: 0,\n        busiestWeekOfDay: 0,\n        busiestDay: {},\n        startDate: \"\",\n        endDate: \"\",\n        periodInDays: 0,\n      },\n    };\n    this.messages = [];\n    // Matches emojis in a string\n    this.regexEmojis = new RegExp(\n      \"(?:[\\u2700-\\u27bf]|(?:\\ud83c[\\udde6-\\uddff]){2}|[\\ud800-\\udbff][\\udc00-\\udfff]|[\\u0023-\\u0039]\\ufe0f?\\u20e3|\\u3299|\\u3297|\\u303d|\\u3030|\\u24c2|\\ud83c[\\udd70-\\udd71]|\\ud83c[\\udd7e-\\udd7f]|\\ud83c\\udd8e|\\ud83c[\\udd91-\\udd9a]|\\ud83c[\\udde6-\\uddff]|[\\ud83c[\\ude01-\\ude02]|\\ud83c\\ude1a|\\ud83c\\ude2f|[\\ud83c[\\ude32-\\ude3a]|[\\ud83c[\\ude50-\\ude51]|\\u203c|\\u2049|[\\u25aa-\\u25ab]|\\u25b6|\\u25c0|[\\u25fb-\\u25fe]|\\u00a9|\\u00ae|\\u2122|\\u2139|\\ud83c\\udc04|[\\u2600-\\u26FF]|\\u2b05|\\u2b06|\\u2b07|\\u2b1b|\\u2b1c|\\u2b50|\\u2b55|\\u231a|\\u231b|\\u2328|\\u23cf|[\\u23e9-\\u23f3]|[\\u23f8-\\u23fa]|\\ud83c\\udccf|\\u2934|\\u2935|[\\u2190-\\u21ff])\"\n    );\n    // Matches words (includes `'` but not `.`,`,` etc.)\n    this.regexWords = new RegExp(/[^\\W_]+(?:['’_-][^\\W_]+)*/g);\n\n    // Fill messagesByHour and messagesByDaysOfWeek for consistent plotting\n    for (let i = 0; i <= 23; i++) {\n      this.authors.author1.messagesByHour.set(i, 0);\n      this.authors.author2.messagesByHour.set(i, 0);\n    }\n    for (let i = 0; i < 7; i++) {\n      this.authors.author1.messagesByDaysOfWeek.set(i, 0);\n      this.authors.author2.messagesByDaysOfWeek.set(i, 0);\n    }\n  }\n\n  incrementCounter(map, key) {\n    let freq = map.get(key);\n    map.set(key, freq === undefined ? 1 : freq + 1);\n  }\n\n  addMaps(map1, map2) {\n    // Adds two Maps. If there are duplicate keys, their values are added\n    const newMap = new Map();\n\n    for (let [key, val] of map1) {\n      newMap.set(key, val);\n    }\n    for (let [key, val] of map2) {\n      let prevVal = newMap.get(key);\n      if (prevVal === undefined) {\n        prevVal = 0;\n      }\n\n      newMap.set(key, prevVal + val);\n    }\n\n    return newMap;\n  }\n\n  generateWordsSectionString(author1, author2) {\n    let wordsSectionString = \"\";\n    if (author1.textMessages === author2.textMessages) {\n      if (author1.wordsPerMessage === author2.wordsPerMessage) {\n        wordsSectionString = `${author1.name} &amp; ${author2.name} have sent each other equal number of\\\n                texts! But that's not all, their messages, on average, have been of the same length as well!`;\n      } else {\n        wordsSectionString = `${author1.name} &amp; ${\n          author2.name\n        } have sent each other equal number of\\\n                texts! But ${\n                  author1.wordsPerMessage > author2.wordsPerMessage\n                    ? author1.name\n                    : author2.name\n                } 's texts were longer`;\n      }\n    } else if (author1.textMessages > author2.textMessages) {\n      if (author1.wordsPerMessage === author2.wordsPerMessage) {\n        wordsSectionString = `${author1.name} sends more texts, and their texts are of the same length\\\n                as ${author2.name}`;\n      } else if (author1.wordsPerMessage > author2.wordsPerMessage) {\n        wordsSectionString = `${author1.name} not only sends more texts, but their texts also tend to be longer!`;\n      } else if (author2.wordsPerMessage > author1.wordsPerMessage) {\n        wordsSectionString = `While ${author1.name} sends more texts, their texts tend to be shorter`;\n      }\n    } else if (author2.textMessages > author1.textMessages) {\n      if (author1.wordsPerMessage === author2.wordsPerMessage) {\n        wordsSectionString = `${author2.name} sends more texts, and their texts are of the same length\\\n                as ${author2.name}`;\n      } else if (author2.wordsPerMessage > author1.wordsPerMessage) {\n        wordsSectionString = `${author2.name} not only sends more texts, but their texts also tend to be longer!`;\n      } else if (author1.wordsPerMessage > author2.wordsPerMessage) {\n        wordsSectionString = `While ${author2.name} sends more texts, their texts tend to be shorter`;\n      }\n    }\n\n    return wordsSectionString;\n  }\n\n  setAuthorNames(messages) {\n    for (let msg of messages) {\n      if (msg.author !== \"\" && msg.author !== \"System\") {\n        if (!this.authors.author1.name) {\n          this.authors.author1.name = msg.author;\n          continue;\n        }\n\n        if (msg.author !== this.authors.author1.name) {\n          this.authors.author2.name = msg.author;\n          break;\n        }\n      }\n    }\n  }\n\n  generateCombinedStats() {\n    const author1 = this.authors.author1;\n    const author2 = this.authors.author2;\n    const combined = this.authors.combined;\n\n    combined.sectionWordsString = this.generateWordsSectionString(\n      author1,\n      author2\n    );\n\n    combined.messagesByHour = this.addMaps(\n      author1.messagesByHour,\n      author2.messagesByHour\n    );\n    combined.messagesByDaysOfWeek = this.addMaps(\n      author1.messagesByDaysOfWeek,\n      author2.messagesByDaysOfWeek\n    );\n    combined.messagesByDate = this.addMaps(\n      author1.messagesByDate,\n      author2.messagesByDate\n    );\n\n    combined.mostUsedWord = [\n      ...this.addMaps(author1.words, author2.words).entries(),\n    ].reduce((a, e) => (e[1] > a[1] ? e : a));\n    combined.mostUsedEmoji = [\n      ...this.addMaps(author1.emojis, author2.emojis).entries(),\n    ].reduce((a, e) => (e[1] > a[1] ? e : a));\n    combined.busiestHour = [...combined.messagesByHour.entries()].reduce(\n      (a, e) => (e[1] > a[1] ? e : a)\n    );\n    combined.busiestWeekOfDay = [\n      ...combined.messagesByDaysOfWeek.entries(),\n    ].reduce((a, e) => (e[1] > a[1] ? e : a));\n    combined.busiestDay = [...combined.messagesByDate.entries()].reduce(\n      (a, e) => (e[1] > a[1] ? e : a)\n    );\n\n    combined.startDate = [...combined.messagesByDate][0][0];\n    combined.endDate = [...combined.messagesByDate][\n      combined.messagesByDate.size - 1\n    ][0];\n    combined.periodInDays = combined.messagesByDate.size;\n  }\n\n  generateFinalStats(auth) {\n    // sort maps\n    auth.words = sortMap(auth.words);\n    auth.emojis = sortMap(auth.emojis);\n\n    auth.wordsPerMessage = auth.totalWords / auth.textMessages;\n    auth.mostUsedWord = [...auth.words][0];\n    auth.mostUsedEmoji = [...auth.emojis][0];\n  }\n\n  generateStats(messages) {\n    return new Promise((resolve, reject) => {\n      this.setAuthorNames(messages);\n\n      for (let msg of messages) {\n        // get author of the message\n        var auth = {};\n        if (msg.author === this.authors.author1.name) {\n          auth = this.authors.author1;\n        } else if (msg.author === this.authors.author2.name) {\n          auth = this.authors.author2;\n        }\n\n        // Sort message by time and increment counters\n        this.incrementCounter(auth.messagesByHour, msg.date.getHours());\n        this.incrementCounter(auth.messagesByDaysOfWeek, msg.date.getDay());\n        this.incrementCounter(\n          auth.messagesByDate,\n          msg.date.toLocaleDateString()\n        );\n\n        // Convert message to lower-case. We're making a decision that case doesn't matter for analysis.\n        const message = msg.message.toLowerCase();\n\n        // determine the type of message and increment counters\n        // This can obviously fail if one includes these file extensions manually, but thanks to WhatsApp's\n        // big brain decision to use differring formats for media messages, this seems to be the only way.\n        auth.totalMessages++;\n\n        if (message.includes(\".jpg\") || message.includes(\".webp\")) {\n          // is an image\n          auth.totalMedia++;\n          auth.pictures++;\n        } else if (message.includes(\".opus\")) {\n          // is an audio\n          auth.totalMedia++;\n          auth.audios++;\n        } else if (message.includes(\".mp4\")) {\n          // is a video\n          auth.totalMedia++;\n          auth.videos++;\n        } else if (\n          message.includes(\"https://\") ||\n          message.includes(\"http://\")\n        ) {\n          // is a link\n          auth.totalMedia++;\n          auth.links++;\n        } else {\n          // text message\n          auth.textMessages++;\n\n          // extract words\n          let words = message.match(this.regexWords);\n          if (words) {\n            if (this.removeStopwords) {\n              words = sw.removeStopwords(words, this.language);\n            }\n\n            for (let word of words) {\n              this.incrementCounter(auth.words, word);\n            }\n\n            auth.totalWords += words.length;\n          }\n\n          // detect & process emojis\n          let emojis = message.match(this.regexEmojis);\n          if (emojis) {\n            for (let emoji of emojis) {\n              this.incrementCounter(auth.emojis, emoji);\n            }\n            auth.totalEmojis += emojis.length;\n          }\n        }\n      }\n\n      this.generateFinalStats(this.authors.author1);\n      this.generateFinalStats(this.authors.author2);\n      this.generateCombinedStats();\n\n      resolve(this.authors);\n    });\n  }\n\n  parseChats(data) {\n    return new Promise((resolve, reject) => {\n      whatsapp.parseString(data).then(\n        (messages) => {\n          this.generateStats(messages).then(\n            (authors) => {\n              resolve(authors);\n            },\n            (err) => {\n              console.error(\n                `Error while generating stats: (${err.name}: ${err.message})`\n              );\n              reject(\n                new Error(\n                  \"An error occured while generating statistics. Please make sure that the file you have uploaded is correct.\"\n                )\n              );\n            }\n          );\n        },\n        (err) => {\n          console.error(\n            `Error while parsing chats: (${err.name}: ${err.message})`\n          );\n          reject(\n            new Error(\n              // eslint-disable-next-line no-multi-str\n              \"Coulnd't parse the file. Please make sure that you have selected correct file. If you're positive that the file is correct, chances\\\n              are the format of your file isn't supported yet.\"\n            )\n          );\n        }\n      );\n    });\n  }\n\n  run(data, rmStopwords, lang) {\n    this.removeStopwords = rmStopwords;\n    this.language = lang;\n    return this.parseChats(data);\n  }\n}\n\nexport default statsCalculator;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"../css/ProgressIndicator.css\";\n\nconst ProgressIndicator = (props) => (\n  <div\n    className={\n      props.isError\n        ? \"progressIndicator progressIndicatorBad\"\n        : \"progressIndicator\"\n    }\n  >\n    <p>{props.progress}</p>\n  </div>\n);\n\nProgressIndicator.propTypes = {\n  progress: PropTypes.string,\n  isError: PropTypes.bool,\n};\n\nProgressIndicator.defaultProps = {\n  progress: \"\",\n  isError: false,\n};\n\nexport default ProgressIndicator;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport \"../css/DownloadAndSeeChart.css\";\n\nconst DownloadAndSeeChart = (props) => (\n  <div className=\"downloadAndSeeChart\">\n    <ul className=\"linksList\">\n      <li>\n        <a className=\"button altColorButton\" href=\"#chart\">\n          See it\n        </a>\n      </li>\n      <li>\n        <button\n          className=\"button altColorButton\"\n          type=\"button\"\n          onClick={props.handleDownload}\n        >\n          Download\n        </button>\n      </li>\n    </ul>\n  </div>\n);\n\nDownloadAndSeeChart.propTypes = {\n  handleDownload: PropTypes.func.isRequired,\n};\n\nDownloadAndSeeChart.defaultProps = {\n  handleDownload: () => {},\n};\n\nexport default DownloadAndSeeChart;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { toPng } from \"html-to-image\";\nimport download from \"downloadjs\";\n\nimport statsCalculator from \"../../core/statscalculator\";\nimport { supportedLangs } from \"../../util/util.js\";\nimport ProgressIndicator from \"./ProgressIndicator.js\";\nimport DownloadAndSeeChart from \"./DownloadAndSeeChart.js\";\n\nimport \"../css/FileForm.css\";\n\nclass FileForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      progress: \"\",\n      err: false,\n    };\n\n    // member vars\n    this.defaultForm = {\n      colors: {\n        author1Color: \"#00C9B1\",\n        author2Color: \"#005D6C\",\n        backgroundColor: \"#000839\",\n        textColor: \"#FFFFFF\",\n        iconColor: \"#FFA41B\",\n        graphColor: \"#FFA41B\",\n      },\n    };\n    this.langExtensions = new Map([\n      [\"af\", \"Afrikaans\"],\n      [\"ar\", \"Arabic, Modern Standard\"],\n      [\"hy\", \"Armenian\"],\n      [\"eu\", \"Basque\"],\n      [\"bn\", \"Bengali\"],\n      [\"br\", \"Breton\"],\n      [\"bg\", \"Bulgarian\"],\n      [\"ca\", \"Catalan\"],\n      [\"zh\", \"Chinese Simplified\"],\n      [\"hr\", \"Croatian\"],\n      [\"cs\", \"Czech\"],\n      [\"da\", \"Danish\"],\n      [\"nl\", \"Dutch\"],\n      [\"en\", \"English\"],\n      [\"eo\", \"Esperanto\"],\n      [\"et\", \"Estonian\"],\n      [\"fa\", \"Farsi\"],\n      [\"fi\", \"Finnish\"],\n      [\"fr\", \"French\"],\n      [\"gl\", \"Galician\"],\n      [\"de\", \"German\"],\n      [\"el\", \"Greek\"],\n      [\"ha\", \"Hausa\"],\n      [\"he\", \"Hebrew\"],\n      [\"hi\", \"Hindi\"],\n      [\"hu\", \"Hungarian\"],\n      [\"id\", \"Indonesian\"],\n      [\"ga\", \"Irish\"],\n      [\"it\", \"Italian\"],\n      [\"ja\", \"Japanese\"],\n      [\"ko\", \"Korean\"],\n      [\"la\", \"Latin\"],\n      [\"lv\", \"Latvian\"],\n      [\"lgg\", \"Lugbara (without diacrit]ics)\"],\n      [\"lggo\", \"Lugbara official (with d]iacritics)\"],\n      [\"mr\", \"Marathi\"],\n      [\"no\", \"Norwegian\"],\n      [\"pl\", \"Polish\"],\n      [\"pt\", \"Portuguese\"],\n      [\"ptbr\", \"Portuguese (Brazilian)\"],\n      [\"pa\", \"Punjabi Gurmukhi\"],\n      [\"ro\", \"Romanian\"],\n      [\"ru\", \"Russian\"],\n      [\"sk\", \"Slovak\"],\n      [\"sl\", \"Slovenian\"],\n      [\"so\", \"Somali\"],\n      [\"st\", \"Sotho\"],\n      [\"es\", \"Spanish\"],\n      [\"sw\", \"Swahili\"],\n      [\"sv\", \"Swedish\"],\n      [\"th\", \"Thai\"],\n      [\"tr\", \"Turkish\"],\n      [\"vi\", \"Vietnamese\"],\n      [\"yo\", \"Yoruba\"],\n      [\"zu\", \"Zulu\"],\n    ]);\n\n    // `this` bindings\n    this.generate = this.generate.bind(this);\n    this.readFile = this.readFile.bind(this);\n    this.handleFormSubmission = this.handleFormSubmission.bind(this);\n    this.toggleLangDropdown = this.toggleLangDropdown.bind(this);\n    this.convertToRGB = this.convertToRGB.bind(this);\n    this.updateProgress = this.updateProgress.bind(this);\n    this.handleDownload = this.handleDownload.bind(this);\n  }\n\n  generate(data, rmStopwords, lang, config) {\n    return new Promise((resolve, reject) => {\n      const sc = new statsCalculator();\n\n      sc.run(data, rmStopwords, lang)\n        .then((stats) => {\n          if (stats === undefined) {\n            reject(new Error(\"Received empty data from generator\"));\n          }\n\n          this.props.submitCallback(stats, config);\n          resolve();\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n  }\n\n  readFile(file) {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n\n      reader.onload = (event) => {\n        const data = event.target.result;\n        if (data && data !== \"\") {\n          resolve(data);\n        }\n      };\n\n      reader.onerror = (event) => {\n        reject(\n          new Error(\n            `An error (${reader.error}) occurred while while trying to read the selected file. Make sure you have\\\n            selected the correct file.`\n          )\n        );\n      };\n\n      reader.readAsText(file);\n    });\n  }\n\n  handleFormSubmission(event) {\n    this.props.showChart(false);\n\n    this.updateProgress(\"Trying to access the file..\");\n\n    // don't referesh page when form is submitted\n    event.preventDefault();\n\n    const file = document.getElementById(\"fileSelector\").files[0];\n    const config = {\n      author1Color: this.convertToRGB(\n        document.getElementById(\"author1ColorPicker\").value\n      ),\n      author2Color: this.convertToRGB(\n        document.getElementById(\"author2ColorPicker\").value\n      ),\n      backgroundColor: this.convertToRGB(\n        document.getElementById(\"bgColorPicker\").value\n      ),\n      textColor: this.convertToRGB(\n        document.getElementById(\"textColorPicker\").value\n      ),\n      iconColor: this.convertToRGB(\n        document.getElementById(\"iconColorPicker\").value\n      ),\n      graphColor: this.convertToRGB(\n        document.getElementById(\"graphColorPicker\").value\n      ),\n    };\n\n    if (file === undefined || !file.name.endsWith(\".txt\")) {\n      this.updateProgress(\"Please select a valid file!\", true);\n      return false;\n    } else {\n      this.updateProgress(\"Trying to read the file..\");\n\n      this.readFile(file)\n        .then((data) => {\n          this.updateProgress(\"Generating the visualization..\");\n\n          return this.generate(\n            data,\n            document.getElementById(\"rmStopwords\").checked,\n            supportedLangs.get(document.getElementById(\"langDropdown\").value),\n            config\n          );\n        })\n        .then(() => {\n          this.updateProgress(\"Your visualization is ready!\");\n          return true;\n        })\n        .catch((err) => {\n          this.updateProgress(err.message, true);\n          return false;\n        });\n    }\n  }\n\n  handleDownload() {\n    toPng(\n      document.getElementById(\"chart\") /*, {\n      width: 900 \n    }*/\n    ).then(function (dataURL) {\n      download(dataURL, \"whatschart.png\");\n    });\n  }\n\n  toggleLangDropdown() {\n    if (document.getElementById(\"rmStopwords\").checked) {\n      document.getElementById(\"langDropdown\").disabled = false;\n    } else {\n      document.getElementById(\"langDropdown\").disabled = true;\n    }\n  }\n\n  convertToRGB(hex) {\n    return (\n      \"rgb(\" +\n      hex\n        .match(/[A-Za-z0-9]{2}/g)\n        .map(function (v) {\n          return parseInt(v, 16);\n        })\n        .join(\",\") +\n      \")\"\n    );\n  }\n\n  updateProgress(progress, err = false) {\n    this.setState((prevState) => {\n      return { progress: progress, err: err };\n    });\n  }\n\n  render() {\n    return (\n      <form\n        id=\"fileForm\"\n        className=\"page\"\n        action=\"\"\n        onSubmit={this.handleFormSubmission}\n      >\n        <h2>Select your file &amp; configuration</h2>\n        <div className=\"fileSelectorWrapper\">\n          <label htmlFor=\"fileSelector\">Select the chat file</label>\n          <input id=\"fileSelector\" name=\"file\" type=\"file\" accept=\".txt\" />\n        </div>\n\n        <section className=\"fileFormOptions\">\n          <div className=\"rmStopwordsWrapper\">\n            <div>\n              <label htmlFor=\"rmStopwords\">\n                Remove{\" \"}\n                <a href=\"https://en.wikipedia.org/wiki/Stop_word\">stopwords</a>?\n              </label>\n              <input\n                id=\"rmStopwords\"\n                type=\"checkbox\"\n                name=\"rmStopwords\"\n                value=\"rmStopwords\"\n                onChange={this.toggleLangDropdown}\n                defaultChecked\n              ></input>\n            </div>\n\n            <div>\n              <label htmlFor=\"langDropdown\">\n                Select the language of conversation\n              </label>\n              <select id=\"langDropdown\" name=\"lang\" defaultValue=\"en\">\n                {[...supportedLangs.keys()].map((key, idx) => (\n                  <option value={key} key={idx}>\n                    {this.langExtensions.get(key)}\n                  </option>\n                ))}\n              </select>\n            </div>\n          </div>\n\n          <div className=\"colorOptionsWrapper\">\n            <div>\n              <input\n                id=\"author1ColorPicker\"\n                type=\"color\"\n                defaultValue={this.defaultForm.colors.author1Color}\n              ></input>\n              <label htmlFor=\"author1ColorPicker\">First author color</label>\n            </div>\n\n            <div>\n              <input\n                id=\"author2ColorPicker\"\n                type=\"color\"\n                defaultValue={this.defaultForm.colors.author2Color}\n              ></input>\n              <label htmlFor=\"author2ColorPicker\">Second author color</label>\n            </div>\n\n            <div>\n              <input\n                id=\"bgColorPicker\"\n                type=\"color\"\n                defaultValue={this.defaultForm.colors.backgroundColor}\n              ></input>\n              <label htmlFor=\"bgColorPicker\">Background color</label>\n            </div>\n\n            <div>\n              <input\n                id=\"textColorPicker\"\n                type=\"color\"\n                defaultValue={this.defaultForm.colors.textColor}\n              ></input>\n              <label htmlFor=\"textColorPicker\">Text color</label>\n            </div>\n\n            <div>\n              <input\n                id=\"iconColorPicker\"\n                type=\"color\"\n                defaultValue={this.defaultForm.colors.iconColor}\n              ></input>\n              <label htmlFor=\"iconColorPicker\">Icons color</label>\n            </div>\n\n            <div>\n              <input\n                id=\"graphColorPicker\"\n                type=\"color\"\n                defaultValue={this.defaultForm.colors.graphColor}\n              ></input>\n              <label htmlFor=\"graphColorPicker\">Graphs color</label>\n            </div>\n          </div>\n        </section>\n\n        <input\n          id=\"buttonGenerate\"\n          className=\"button altColorButton\"\n          type=\"submit\"\n          value=\"Generate\"\n        />\n\n        <ProgressIndicator\n          progress={this.state.progress}\n          isError={this.state.err}\n        />\n\n        {this.props.chartVisible && (\n          <DownloadAndSeeChart handleDownload={this.handleDownload} />\n        )}\n      </form>\n    );\n  }\n}\n\nFileForm.propTypes = {\n  submitCallback: PropTypes.func.isRequired,\n  showChart: PropTypes.func.isRequired,\n  chartVisible: PropTypes.bool.isRequired,\n};\n\nFileForm.defaultProps = {\n  submitCallback: () => {},\n  showChart: () => {},\n  chartVisible: false,\n};\n\nexport default FileForm;\n","import React from \"react\";\n\nimport \"../css/FeedbackPage.css\";\n\nconst FeedbackPage = (props) => (\n  <div id=\"feedbackPage\" className=\"page\">\n    <h2>Feedback</h2>\n    <ul className=\"linksList\">\n      <li>\n        <a\n          className=\"button\"\n          href=\"https://github.com/bhumitattarde/WhatsChart/issues/new?labels=bug&title=BUG: \"\n        >\n          Report bugs\n        </a>\n      </li>\n      <li>\n        <a\n          className=\"button\"\n          href=\"https://github.com/bhumitattarde/WhatsChart/issues/new?labels=enhancement&title=SUGGESTION: \"\n        >\n          Suggest improvements\n        </a>\n      </li>\n      <li>\n        <a\n          className=\"button\"\n          href=\"https://github.com/bhumitattarde/WhatsChart\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          GitHub\n        </a>\n      </li>\n    </ul>\n  </div>\n);\n\nexport default FeedbackPage;\n","import React from \"react\";\n\nimport \"../css/Footer.css\";\n\nconst Footer = (props) => (\n  <div id=\"footer\">\n    <hr />\n    <ul>\n      <li id=\"donate\">\n        <a href=\"\">Buy me a coffee!</a>\n      </li>\n      <li>\n        Made with &hearts; by{\" \"}\n        <a href=\"https://www.bhumit.net\">Bhumit Attarde</a>\n      </li>\n      <li>\n        &copy; 2021 <a href=\"https://www.bhumit.net\">Bhumit Attarde</a>\n      </li>\n      <li>\n        WhatsApp is a registered trademark of WhatsApp Inc. This site and\n        service are not related to WhatsApp Inc. in any way.\n      </li>\n    </ul>\n  </div>\n);\n\nexport default Footer;\n","import React from \"react\";\n\nimport NavBar from \"./components/js/NavBar.js\";\nimport MainPage from \"./components/js/MainPage.js\";\nimport WhyWhatschart from \"./components/js/WhyWhatschart.js\";\nimport HowtoPage from \"./components/js/HowtoPage.js\";\nimport WhatsChart from \"./components/js/WhatsChart.js\";\nimport FileForm from \"./components/js/FileForm.js\";\nimport FeedbackPage from \"./components/js/FeedbackPage.js\";\nimport Footer from \"./components/js/Footer.js\";\n\nimport \"./App.css\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showChart: false,\n    };\n\n    // member variables\n    this.config = {};\n    this.stats = {};\n\n    // `this` bindings\n    this.formSubmitCallback = this.formSubmitCallback.bind(this);\n    this.showChart = this.showChart.bind(this);\n  }\n\n  formSubmitCallback(stats, config) {\n    this.stats = stats;\n    this.config = config;\n\n    this.showChart(true);\n  }\n\n  showChart(show) {\n    this.setState((prevState) => ({\n      showChart: show,\n    }));\n  }\n\n  render() {\n    return (\n      <div className=\"appWrapper\">\n        <NavBar />\n        <MainPage />\n        <WhyWhatschart />\n        <HowtoPage />\n\n        <FileForm\n          submitCallback={this.formSubmitCallback}\n          showChart={this.showChart}\n          chartVisible={this.state.showChart}\n        />\n\n        {this.state.showChart && (\n          <WhatsChart\n            author1={this.stats.author1}\n            author2={this.stats.author2}\n            combined={this.stats.combined}\n            config={this.config}\n          />\n        )}\n\n        <FeedbackPage />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}